
services:
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - ./certs:/etc/letsencrypt
      - ./html:/var/www/html
      - ./logs:/var/log/nginx
    networks:
      - proxy_net
    depends_on:
      - certbot
    #command: [nginx-debug, '-g', 'daemon off;']

  certbot:
    image: certbot/dns-route53
    container_name: certbot
    env_file:
      - .env
    volumes:
      - ./certs:/etc/letsencrypt
      - ./html:/var/www/html

    # Comando para gerar o certificado
    # Certifique-se de que as variáveis de ambiente estão definidas no arquivo .env
    #command: certonly -v --dns-route53 --email ${CERTBOT_EMAIL} --agree-tos -d ${DOMAIN} -d ${WILDCARD_DOMAIN}

    # Esse comando é usado para verificar os certificados existentes
    # e manter o contêiner ativo para verificações periódicas
    command: >
      sh -c '
      while true; do
        echo "[$(date)] Verificando certificados..." &&
        certbot certificates &&
        echo "Status OK. Próxima verificação em 1 hora..." &&
        sleep 3600
      done
      '
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "certbot", "certificates"]
      interval: 1h
      timeout: 30s
      retries: 3

networks:
  proxy_net:
    name: proxy_net
    attachable: true
    external: false  # Isso permite que o compose crie a rede se não existir
    driver: bridge