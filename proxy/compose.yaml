
services:
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    command: /bin/sh -c "while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - ./certs:/etc/letsencrypt
      - ./html:/var/www/html
      - ./logs:/var/log/nginx
      - ./error_pages:/usr/share/nginx/html
    networks:
      - proxy_net
    depends_on:
      - certbot

  certbot:
    image: certbot/dns-route53
    container_name: certbot
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./certs:/etc/letsencrypt
      - ./html:/var/www/html
    networks:
      - proxy_net

    # Comando para gerar o certificado
    # Certifique-se de que as variáveis de ambiente estão definidas no arquivo .env
    #command: certonly -v --dns-route53 --email ${CERTBOT_EMAIL} --agree-tos -d ${DOMAIN} -d ${WILDCARD_DOMAIN}

    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  proxy_net:
    name: proxy_net
    attachable: true
    external: false  # Isso permite que o compose crie a rede se não existir
    driver: bridge