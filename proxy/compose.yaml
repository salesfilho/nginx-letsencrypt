
services:
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - ./certs:/etc/letsencrypt
      - ./html:/var/www/html
      - ./logs:/var/log/nginx
    networks:
      - proxy_net
    depends_on:
      - certbot
    #command: [nginx-debug, '-g', 'daemon off;']

  certbot:
    image: certbot/dns-route53
    container_name: certbot
    env_file:
      - .env
    volumes:
      - ./certs:/etc/letsencrypt
      - ./html:/var/www/html
    
    command: >
      sh -c '
      mkdir -p /root/.aws &&
      echo "[default]" > /root/.aws/credentials.ini &&
      echo "region = $${AWS_REGION}" >> /root/.aws/credentials.ini &&
      echo "output = json" >> /root/.aws/credentials.ini &&
      echo "dns_route53_access_key_id = $${AWS_ACCESS_KEY_ID}" >> /root/.aws/credentials.ini &&
      echo "dns_route53_secret_access_key = $${AWS_SECRET_ACCESS_KEY}" >> /root/.aws/credentials.ini &&
      chmod 600 /root/.aws/credentials.ini &&
      certbot certonly \
        --dns-route53 \
        --dns-route53-propagation-seconds 30 \
        -n --agree-tos --email $${CERTBOT_EMAIL} \
        -d $${CERTBOT_DOMAINS//,/ -d } \
        --keep-until-expiring
      '
networks:
  proxy_net:
    name: proxy_net
    attachable: true
    external: false  # Isso permite que o compose crie a rede se n√£o existir
    driver: bridge