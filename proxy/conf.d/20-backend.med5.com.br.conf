upstream api_servers {
    # Balanceamento por conexões (mais justo que round-robin)
    least_conn;
    
    # Lista de servidores (Docker DNS resolve para múltiplas réplicas)
    server med5-api:8081 max_fails=3 fail_timeout=30s;

    # Mantém conexões ativas para melhor performance
    keepalive 32;
}

server {
    listen 443 ssl http2;  # Adicione HTTP/2
    server_name h-backend.med5.com.br;
    
    include /etc/nginx/conf.d/10-ssl-common.conf;
    
    # Timeouts ajustados para APIs
    proxy_connect_timeout 2s;
    proxy_send_timeout 5s;
    proxy_read_timeout 10s;
    send_timeout 5s;
    
    # Buffer sizes otimizados
    proxy_buffer_size 4k;
    proxy_buffers 32 16k;
    proxy_busy_buffers_size 24k;
    
    location / {
        proxy_pass http://api_servers;
        
        # Headers essenciais
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Política de failover
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_timeout 1s;
        proxy_next_upstream_tries 3;
        
        # Keepalive
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Cache (ajuste conforme necessidade)
        proxy_cache STATIC;
        proxy_cache_valid 200 1m;
        proxy_cache_use_stale error timeout updating;

        # Interceptação de erros
        proxy_intercept_errors on;
    }
    
    # Healthcheck passivo (alternativa ao check ativo)
    location = /health {
        proxy_pass http://api_servers;
        access_log off;
    }
        # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    
    access_log /var/log/nginx/backend.access.log combined buffer=64k flush=5s;
    error_log /var/log/nginx/backend.error.log warn;
}